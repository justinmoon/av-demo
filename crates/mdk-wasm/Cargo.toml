[package]
name = "mdk-wasm"
version = "0.1.0"
edition = "2021"
publish = false
license = "MIT"
description = "WASM wrapper for MDK (OpenMLS) for browser use"

[lib]
crate-type = ["cdylib", "rlib"]
path = "src/lib.rs"

[dependencies]
wasm-bindgen = "0.2"
js-sys = "0.3"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
once_cell = "1"
getrandom = { version = "0.2", features = ["js"] }
console_error_panic_hook = { version = "0.1", optional = true }

# Avoid pulling nostr until secp256k1-sys is configured for wasm; we'll accept hex strings for now.

# Direct feature unification for OpenMLS crates to ensure WASM/std compat
openmls = { version = "0.7.0", default-features = false, features = ["js"] }
openmls_traits = { version = "0.4.0", default-features = false }
openmls_basic_credential = { version = "0.4.0", default-features = false }
openmls_rust_crypto = { version = "0.4.0", default-features = false }
openmls_memory_storage = { version = "0.4.0", default-features = false }

# Local MDK crates (path to sibling repo ../mdk) â€” optional until secp256k1 toolchain for WASM is present
mdk-core = { version = "0.5.0", path = "../../../mdk/crates/mdk-core", default-features = false, optional = true }
mdk-memory-storage = { version = "0.5.0", path = "../../../mdk/crates/mdk-memory-storage", default-features = false, optional = true }

[features]
default = ["panic-hook"]
panic-hook = ["console_error_panic_hook"]
# Enable MDK and memory storage when the toolchain can compile nostr/secp256k1 to wasm
with-mdk = ["dep:mdk-core", "dep:mdk-memory-storage"]
